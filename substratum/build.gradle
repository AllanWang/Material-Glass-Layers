plugins {
    id 'com.gladed.androidgitversion' version '0.3.4'
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

play {
    jsonFile = file('../files/gplay-keys.json')
    track = 'alpha'
    errorOnSizeLimit = true
    uploadImages = false
    untrackOld = true
}

android {
    compileSdkVersion Integer.parseInt(project.TARGET_SDK)
    buildToolsVersion project.BUILD_TOOLS

    androidGitVersion {
        codeFormat = 'MMNNPPBB'
        format = '%tag%%.count%%-commit%'
        prefix 'v'
    }

    defaultConfig {
        applicationId project.APP_PACKAGE_SAMPLE
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent,
                    "${APP_TAG_SHORT}-${variant.productFlavors[1].name}.apk")
        }
    }

    signingConfigs {

        def releaseProps = new Properties()
        file("../files/play.properties").withInputStream { releaseProps.load(it) }

        release {
            storeFile file("../files/play.keystore")
            storePassword releaseProps.getProperty('storePassword')
            keyAlias releaseProps.getProperty('keyAlias')
            keyPassword releaseProps.getProperty('keyPassword')
        }

        test {
            storeFile file("../files/test.keystore")
            storePassword "testkey"
            keyAlias "testKey"
            keyPassword "testkey"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions("delta", "base")
    productFlavors {

        //deltas contain components that are wip
        Clear_delta {
            dimension "delta"
        }
        Dark_delta {
            dimension "delta"
        }

        //base contains actual build flavours
        Clear_sample {
            dimension "base"
            resValue "string", "app_name", "MGlass Delta"
            signingConfig signingConfigs.test
        }
        Clear_full {
            applicationId project.APP_PACKAGE_PLAY
            dimension "base"
            resValue "string", "app_name", "Material Glass"
            signingConfig signingConfigs.release
        }
        Dark_sample {
            dimension "base"
            resValue "string", "app_name", "MDark Delta"
            signingConfig signingConfigs.test
        }
        Dark_full {
            dimension "base"
            resValue "string", "app_name", "Material Dark"
            signingConfig signingConfigs.test
        }
    }

    variantFilter { variant ->
        def delta = variant.getFlavors().get(0).name
        def base = variant.getFlavors().get(1).name
        def theme = base.split('_')[0]
        if (!delta.startsWith(theme)) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    testCompile 'junit:junit:4.12'
//    compile "com.android.support:appcompat-v7:$project.ANDROID_SUPPORT_LIBS"
//    compile "com.android.support:support-v4:$project.ANDROID_SUPPORT_LIBS"
    compile project(':substrate')
}
